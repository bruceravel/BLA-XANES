
* Convert bent-laue analyzer images to XANES data

** Synopsis

An measurement set consists of

 + A column data file with columns of energy and scalars from the
   measurement 

 + One Pilatus image for each energy containing the HERFD signal at
   that energy

 + A set of Pilatus images taken at energies around the fluorescence
   energy.  These are used to make a mask which identifies which
   pixels contain signal related to specific emission energies.

This software uses perl and Image Magick to process the images into a
high resolution XANES spectrum.

** Installation

After installing Image Magick, compiled to use signed 32 bit numbers
(see below), do the following.

:      perl Build.PL
:      ./Build
:      ./Build test
:      sudo ./Build install

** Usage

There are two programs in the bin/ folder.  ~herfd~ is used to make a
HERFD spectrum at a specific emission energy.  ~rixs~ is used to
generate a sequence of HERFD spectra at a sequence of emission
energies.

*** The herfd script

:  herfd [options] <stub>
:
:     --config  | -c         [string]  configuration file (required)
:     --energy  | -e         [integer] emission energy (required)
:     --animate | -a         [flag]    save tiff animation of mask creation
:     --save    | -s         [flag]    save intermediate steps of mask creation
:     --verbose | -v         [flag]    write progress messages
:     --quiet   | -q         [flag]    suppress progress messages
:     --help    | -h         [flag]    write this message and exit

  
The ~herfd~ script assumes that scan files and image files have
related names.  In this example, the scan file is called ~Aufoil1.001~
and the image files are called ~Aufoil1_NNNNN.tif~.  File locations
are specified in the configuration file.

:  example:  herfd -c /path/to/config.ini -e 9713 -a Aufoil1


*** The rixs script

:  rixs [options] <stub>
:
:     --config  | -c         [string]  configuration file (required)
:     --animate | -a         [flag]    save tiff animation of mask creation
:     --save    | -s         [flag]    save intermediate steps of mask creation
:     --verbose | -v         [flag]    write progress messages
:     --quiet   | -q         [flag]    suppress progress messages
:     --help    | -h         [flag]    write this message and exit

The ~rixs~ script assumes that scan files and image files have related
names.  In this example, the scan file is called `Aufoil1.001' and
the image files are called `Aufoil1_NNNNN.tif'.  Masks are created
from the elastic images at each emission energy.  File locations are
specified in the configuration file.

:  example:  rixs -c /path/to/config.ini -a Aufoil1

*** The configuration file

The configuration file is in the Windows-style ini format.  Here is an
example.

:   [bla]
:   emission   = 9703 9705 9707 9709 9711 9713 9715 9717 9719
:   scanfolder = /home/bruce/Data/NIST/10ID/2011.12/scans
:   tiffolder  = /home/bruce/Data/NIST/10ID/2011.12/tiffs
:   outfolder  = /home/bruce/Data/NIST/10ID/2011.12/processed

The ~emission~ item, which is not used by the ~herfd~ script, contains
the list of emission energies at which to generate HERFD spectra.  The
other three items are the locations of the scan files, the image
files, and the output files.

This configuration file can sit anywhere on disk and *must* be
specified at the command line for either script.  I would recommend
that you put it in the current work directory wherever you are working
on your data.

** Mask

At the end of each scan, a series of images are collected with the
incident beam at energies around the L alpha 1 line.  The XANES can be
extracted, then, as a function of emission energy by creating a mask
from the elastic energy which identifies the pixels on the camera
that are illuminated by photons of that energy.

For a given emission energy, the elastic image is read and processed
in three steps:

 1. Set the bad pixels (i.e. those with spuriously large values) to
    zero.  Also remove all weak pixels, i.e. those with fewer than
    some cutoff, say 2 counts.

 2. Remove all "lonely" pixels.  These are the pixels that are
    illuminated but surrounded by few or no illuminated pixels.

 3. Add in all "social" pixels.  These are pixels which are dark, but
    are surrounded by enough illuminated pixels (the default is 4 or
    more) that it, too, should be illuminated.

This results in a simple logical-AND mask for evaluating the signal at
each energy point from the Pilatus image.

When the ~-a~ flag is used with the ~herfd~ or ~rixs~ scripts, an
4-frame animated tiff file will be written which shows the steps from
elastic image to final mask.

** Scan conversion

At each energy point, the HERFD signal is computed from the Pilatus
image using the mask created by the algorithm described above.  The
counts on each pixel lying within the illuminated portion of the mask
are summed.  This sum is the HERFD signal at that incident energy.

A column data file is written containing the energy and several
scalars from the original measurement and a column containing the
HERFD signal.  This file can be imported directly into Athena.

** Working with Image Magick

I am using [[http://www.imagemagick.org/script/index.php][Image Magick]] and its [[http://www.imagemagick.org/script/perl-magick.php][Perl interface]] for this project.  As
delivered to an Ubuntu system, Image Magick cannot handle the TIFF
files as written by the [[http://www.dectris.com/sites/pilatus100k.html][Pilatus 100K]] imagine detector.  In order to be
able to use Image Magick, it must be recompiled with a larger bit
depth.  This is done by downloading and unpacking the tarball, then doing

:      ./configure --with-quantum-depth=32

I also rebuilt the perl wrapper which comes with the Image Magick
source code.  This also was a bit tricky.  My Ubuntu system has 
perl 5.10.1 and therefore has a ~libperl.5.10.1.so~.  It did not, however,
have a ~libperl.so~ symlinked to it.  To get the perl wrapper to
build, I had to do

:      sudo ln -s /usr/lib/libperl.so.5.10.1 /usr/lib/libperl.so

Adjust the version number on the perl library as needed.
